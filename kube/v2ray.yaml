# deploy a v2ray instance for internal usage.
apiVersion: v1
kind: Service
metadata:
  name: v2ray
spec:
  ports:
  - name: http
    port: 10800
    targetPort: 10800
  - name: socks5
    port: 10808
    targetPort: 10808
  selector:
    app: v2ray
  type: NodePort
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: v2ray
data:
  config.json: |
    {
        "inbounds": [
            {
                "allocate": {
                    "concurrency": null,
                    "refresh": null,
                    "strategy": "always"
                },
                "listen": "0.0.0.0",
                "port": "10800",
                "protocol": "http",
                "settings": {
                    "allowTransparent": null,
                    "timeout": null,
                    "userLevel": null
                },
                "sniffing": {
                    "destOverride": null,
                    "enabled": null
                },
                "tag": "http"
            },
            {
                "allocate": {
                    "concurrency": null,
                    "refresh": null,
                    "strategy": "always"
                },
                "listen": "0.0.0.0",
                "port": "10808",
                "protocol": "socks",
                "settings": {
                    "auth": null,
                    "ip": null,
                    "udp": null,
                    "userLevel": null
                },
                "sniffing": {
                    "destOverride": null,
                    "enabled": null
                },
                "tag": "main"
            }
        ],
        "outbounds": [
            {
                "_QV2RAY_USE_GLOBAL_FORWARD_PROXY_": false,
                "mux": {
                    "concurrency": 1,
                    "enabled": null
                },
                "protocol": "vmess",
                "sendThrough": "0.0.0.0",
                "settings": {
                    "vnext": [
                        {
                            "address": "<hostname or ip>",
                            "port": <port>,
                            "users": [
                                {
                                    "alterId": 64,
                                    "id": "<credential>",
                                    "level": 0,
                                    "security": "auto"
                                }
                            ]
                        }
                    ]
                },
                "streamSettings": {
                    "dsSettings": {
                        "path": "/"
                    },
                    "httpSettings": {
                        "host": [
                        ],
                        "path": "/"
                    },
                    "kcpSettings": {
                        "congestion": false,
                        "downlinkCapacity": 20,
                        "header": {
                            "type": "none"
                        },
                        "mtu": 1350,
                        "readBufferSize": 1,
                        "tti": 20,
                        "uplinkCapacity": 5,
                        "writeBufferSize": 1
                    },
                    "network": "tcp",
                    "quicSettings": {
                        "header": {
                            "type": "none"
                        },
                        "key": "",
                        "security": ""
                    },
                    "security": "",
                    "sockopt": {
                        "mark": 0,
                        "tcpFastOpen": false,
                        "tproxy": "off"
                    },
                    "tcpSettings": {
                        "header": {
                            "request": {
                                "headers": {
                                },
                                "method": "GET",
                                "path": [
                                ],
                                "version": "1.1"
                            },
                            "response": {
                                "headers": {
                                },
                                "reason": "OK",
                                "status": "200",
                                "version": "1.1"
                            },
                            "type": "none"
                        }
                    },
                    "tlsSettings": {
                        "allowInsecure": false,
                        "allowInsecureCiphers": false,
                        "alpn": [
                        ],
                        "certificates": [
                        ],
                        "disableSystemRoot": false,
                        "serverName": ""
                    },
                    "wsSettings": {
                        "headers": {
                        },
                        "path": "/"
                    }
                },
                "tag": "outBound_PROXY"
            }
        ],
        "routing": {
            "balancers": [
            ],
            "domainStrategy": "",
            "rules": [
                {
                    "QV2RAY_RULE_ENABLED": true,
                    "QV2RAY_RULE_TAG": "Default rule",
                    "QV2RAY_RULE_USE_BALANCER": false,
                    "attrs": "",
                    "balancerTag": "fCpV1sIQJOYZ",
                    "domain": [
                    ],
                    "inboundTag": [
                        "http",
                        "main"
                    ],
                    "ip": [
                    ],
                    "outboundTag": "outBound_PROXY",
                    "port": "10800,10808",
                    "protocol": [
                    ],
                    "source": [
                    ],
                    "type": "field",
                    "user": [
                    ]
                }
            ]
        }
    }

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: v2ray
  labels:
    app: v2ray
spec:
  replicas: 1
  selector:
    matchLabels:
      app: v2ray
  template:
    metadata:
      labels:
        app: v2ray
    spec:
      containers:
      - name: v2ray
        image: v2fly/v2fly-core:latest
        ports:
          - containerPort: 10808
            name: socks5
          - containerPort: 10800
            name: http
        volumeMounts:
          - name: config
            mountPath: /etc/v2ray
            readOnly: true
        readinessProbe:
          tcpSocket:
            port: socks5
          initialDelaySeconds: 5
          periodSeconds: 10
        livenessProbe:
          tcpSocket:
            port: socks5
          initialDelaySeconds: 15
          periodSeconds: 20
      volumes:
        - name: config
          configMap:
            name: v2ray
            items:
              - key: config.json
                path: config.json
