# deploy a fully functional development environment as a statefulset
# check https://github.com/onichandame/docker-dev for docs
apiVersion: v1
kind: Service
metadata:
  name: dev
spec:
  ports:
  - name: dev
    port: 30000
    targetPort: 3000
  selector:
    app: dev
  type: LoadBalancer
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: dev
spec:
  selector:
    matchLabels:
      app: dev
  serviceName: "dev"
  replicas: 1
  template:
    metadata:
      labels:
        app: dev
    spec:
      terminationGracePeriodSeconds: 0
      containers:
      - name: dev
        image: "onichandame/docker-dev:latest"
        imagePullPolicy: Always
        ports:
        - containerPort: 3000
          name: dev-port
        volumeMounts:
        - mountPath: /git # mount your workspaces here
          name: git-claim
        env:
          - name: GIT_USER_NAME
            value: "onichandame"
          - name: GIT_USER_EMAIL
            value: "zxinmyth@gmail.com"
          - name: PROXY_SERVER_ADDR
            value: "<your proxy server addr>"
          - name: PROXY_SERVER_PORT
            value: "<your proxy server port>"
  volumeClaimTemplates:
  - metadata:
      name: git-claim
    spec:
      accessModes: [ "ReadWriteOnce" ]
      storageClassName: local-storage
      resources:
        requests:
          storage: 500Gi
---
apiVersion: v1
kind: PersistentVolume
metadata:
  name: git-storage
spec:
  capacity:
    storage: 500Gi
  accessModes:
  - ReadWriteOnce
  persistentVolumeReclaimPolicy: Retain
  storageClassName: local-storage
  local:
    path: /hosthome/xiao/git # match the directory containing all your workspaces
  nodeAffinity:
    required:
      nodeSelectorTerms:
      - matchExpressions:
        - key: kubernetes.io/hostname
          operator: In
          values:
          - minikube # match the name of the node where files reside
---
apiVersion: storage.k8s.io/v1
kind: StorageClass
metadata:
  name: local-storage
provisioner: kubernetes.io/no-provisioner
volumeBindingMode: WaitForFirstConsumer
